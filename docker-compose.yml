version: "3"

services:
  notify:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    dns:
      - 8.8.8.8
    ports:
      - 8080:8080
    volumes:
      - .:/usr/src/app
    command: "start:dev"
    networks:
      - default
    depends_on:
      - notify-mongodb
      - notify-redis
      - notify-kafka
      - notify-zookeeper

  notify-redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'

  notify-mongodb:
    image: 'mongo:latest'
    container_name: 'notify-mongodb'
    ports:
      - '27017:27017'
    volumes:
      - ./data:/data/db
    environment:
      - MONGODB_DATABASE=notify-db
    restart: unless-stopped

  notify-zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: notify-zookeeper
    ports:
      - "2181:2181"

  notify-kafka:
    image: wurstmeister/kafka:latest
    container_name: notify-kafka
    ports:
      - "9092:9092"
    expose:
      - "9094"
    links:
      - notify-zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: notify-zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://172.17.0.1:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "topic-test:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
